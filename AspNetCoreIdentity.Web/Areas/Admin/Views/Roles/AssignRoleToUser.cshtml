@{
    ViewData["Title"] = "AssignRoleToUser";
}
@model List<AdminModel.AssignRoleToUserViewModel>
<div class="row">
    <div class="col-md-6 offset-3">
        <h2>Rol Atama</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success col-md-6 offset-3" role="alert">
                @TempData["SuccessMessage"]
            </div>
        }

        <div asp-validation-summary="ModelOnly" class="alert alert-danger col-md-6 offset-3" role="alert">
        </div>

        <form asp-controller="Roles" asp-action="AssignRoleToUser" asp-route-userId="@ViewBag.userId" method="post">

            @for (int i = 0; i < Model.Count; i++)
            {
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" asp-for="@Model[i].Exist">
                    <label class="form-check-label">@Model[i].Name</label>
                    <input type="hidden" asp-for="@Model[i].Name">
                    <input type="hidden" asp-for="@Model[i].Id">
                </div>
            }

            <div class="row mb-3">
                <div class="col-md-8 offset-md-4">
                    <button type="submit" class="btn btn-primary">Rol Atama</button>
                </div>
            </div>

        </form>
        <div class="mt-3">
            <a asp-controller="Home" asp-action="Index">Kullanıcı Listesi </a>
        </div>
    </div>
</div>

@* Servera gitmeden daha client gerekli validasyon kontroli yapılması *@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


